image:
 - Visual Studio 2019

# clone directory
clone_folder: c:\projects\wxMaximaMaxima
# Do not clone the entire git repository
clone_depth: 15

cache:
  # The build directory is only cached for the .pdb files. Other files are removed.
  - C:\ProgramData\chocolatey\bin -> appveyor.yml
  - C:\ProgramData\chocolatey\lib -> appveyor.yml
  # Do not cache the build itself - we only care about the install!

# branches to build
branches:
  except:
  - gh_pages
  - DebianPackaging
  - DebianPackaging_NightlyBuild

install:
  - ps: |
      # We write out a script that pulls in Visual Studio variables
      echo @'
      echo '- Setting environment variables for Visual Studio'
      cmd.exe /c "call `"C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat`" && set > %temp%\vcvars.txt"
      Get-Content "$env:temp\vcvars.txt" | Foreach-Object {
        if ($_ -match "^(.*?)=(.*)$") {
          Set-Content "env:\$($matches[1])" $matches[2]
        }
      }
      '@>> vcvars.ps1
      
      echo '- Installing pandoc...'
      choco install -y --no-progress pandoc
      choco install -y --no-progress 7zip.install
      choco install -y --no-progress nsis
before_build:

build_script:
  - ps: |
      bash nightlybuild.sh

on_failure:
  - ps: |
      pushd build
      7z a FailureDump.zip *
      Push-AppveyorArtifact FailureDump.zip
      popd

artifacts:
  - path: '*.exe'
    name: wxMaxima_Installer

deploy:
  - provider: Environment
    name: GithubReleases
    draft: false
    prerelease: false
    on:
      APPVEYOR_REPO_TAG: true
